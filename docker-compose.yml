version: '3.8'

networks:
    dockerapi-dev:
        driver: bridge

services:
    # Postgres DB
    postgres_image:
        container_name: 'postgres'
        image: postgres:latest
        environment:
            POSTGRES_PASSWORD: '4y7sV96vA9wv46VR'
            POSTGRES_USER: 'postgres_user'
            POSTGRES_DB: 'bouldersDb'
            PGDATA: /data/postgres

    # Service API
    service-api:
        image: 'service-api:latest'
        container_name: api
        depends_on: 
            postgres_image:
                condition: service_healthy
        links:
            - postgres_image
        environment:
            - ASPNETCORE_ENVIRONMENT=Release
            #- PostgresSettings__ConnectionString=host=host.docker.internal;port=5432;userid=postgres_user;database=bouldersDb;Password=4y7sV96vA9wv46VR
        ports:
            - '5088:8080'
        networks:
            - dockerapi-dev
    # Angular Front End
    front-end:
        image: 'angular-front:latest'
        container_name: web
        ports:
            - '4200:4200'
        networks:
            - dockerapi-dev
volumes:
    postgres: